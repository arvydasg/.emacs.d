* Authentication to GIT

** STEP 1 - Introduce yourself to git

When on new system, you might get such message when trying to perform a
push/pull git command:

#+begin_quote
> Author identity unknown
>
> Please tell me who you are.
>
>Run
>
> git config --global user.email "you@example.com"
>
> git config --global user.name "Your Name"
#+end_quote

When you enter the username and name above in the terminal, you will get prompted for a password.

There are multiple ways to get that password:

- authenticate to git with ***personal access token***
- authenticate to git with ***ssh key***
- authenticate to with ***GPG key*** (no guide on that yet)

** STEP 2 Option 1 - Authenticate to git with personal access token

First, do the `introduce yourself to git` step

When you do a git operation(with magit or just from the terminal) you will be
prompted for password. One way is to get with a generated =personal access
token= in github developer settings.

Go generate that token, save it somewhere safe.

Then in the terminal do:

#+begin_src bash
  git config --global --replace-all credential.helper cache
  git config --global credential.helper store
#+end_src

Now try to push the code, enter your git username as username and enter the
token that you have generated as password.

Git will remember your credentials for future git operations.

Changing the token - [[https://stackoverflow.com/questions/46645843/where-to-store-my-git-personal-access-token][Explanation here]].

#+begin_src bash
  git config --list (some info about you)
#+end_src

** STEP 2 Option 2 Authenticate to git with ssh key

Visit a Git hosting service like GitHub, GitLab, or Bitbucket and create a new
repository. Follow the instructions provided by the platform to create the
repository.

Link Your Local Repository to the Remote:

#+begin_src shell
  git remote add origin https://github.com/your-username/your-repo-name.git
  git remote -v
  # if mistake happened
  git remote remove origin

  # add git credentials
  cd /.ssh
  # if there are no id_rsa or id_rsa.pub files, then do
  ssh-keygen -t rsa -b 4096 -C "your.email@gmail.com"
  # add id_rsa.pub file to github
  ssh -T git@github.com
  # push to remote repo
  git push -u origin master
#+end_src

** TODO STEP 2 Option 3 authenticate to with GPG key

* Proper Git workflow

- Implemented in Quotes project - https://github.com/azegas/quotes/issues/5
- [another cool workflow, kind of automated](https://www.youtube.com/watch?v=d3N2yeAaLkc&ab_channel=Deanin)
  
Version Control: Make frequent commits and use branches to manage features or experiments. This is a good practice for any software development project.

Similar like this guy shows here

- Find an issue
- say when you will start working on it
- create a branch for it (from the github website!)
- work on the issue
- push the issue
- merge to master
- delete the branch, why keep it? can always revert the changes over the PHASE branch
